# Workflow to deploy GCP workflow

name: Deploy GCP Workflow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Deploy-Workflow"
  Deploy-Workflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/854735162550/locations/global/workloadIdentityPools/github-pool/providers/my-provider'
          service_account: 'workflows-sa@landing-zone-demo-341118.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: uri-test
          # service_account_key: ${{ secrets.gcp }}
          # export_default_credentials: true

      - name: Use gcloud CLI to deploy the workflow
        run: gcloud info

      - name: Deploy GCP Workflow
        uses: UriKatsirPrivate/deploy-gcp-workflow@v12
        with:
          project-id: landing-zone-demo-341118
          workflow-name: github-actions-demo
          workflow-definition-file-name: deploy-workflow-demo.yaml
          service-account-name: workflows-sa@landing-zone-demo-341118.iam.gserviceaccount.com
          workflow-region: us-central1